<?phpdefined('BASEPATH') OR exit('No direct script access allowed');/** * Model for agency and related tables. * * @author dhareen */class Agency extends CI_Model {    /**     * Data Grid GET METHOD     */    public function get_sub_agencies($sLimit, $sWhere = "", $sOrder, $agencyId = null) {        if ($agencyId == null) {            exit("AGENCY ID NULL || ERROR ");        }        $table = 'crm_agencies_basic as basic';        $options = array(            'fields' => array(                'basic.user_id,                 basic.agency_image,                 basic.agency_name,                 basic.agency_email,                 basic.created_date,                 basic.parent_id,                 basic.is_approved,                 master.user_id'            ),            'JOIN' => array(                array(                    'table' => 'crm_user_tbl master',                    'condition' => 'basic.user_id = master.user_id',                    'type' => 'FULL'                )            ),            'conditions' => "basic.is_delete = 'N' AND is_payment = 'Y' AND basic.parent_id = $agencyId AND basic.is_approved != 'N'",            'LIMIT' => array(                "start" => $sLimit['start'],                "end" => $sLimit['end']            ),            'ORDER_BY' => array(                "field" => $sOrder['field'],                "order" => $sOrder['order']            )        );        if (strlen($sWhere) > 0) {            $options['conditions'] = $options['conditions'] . " and " . $sWhere;        }        $agencyArr = get_relation($table, $options, FALSE);        return $agencyArr;    }    /*     * Sub Agencies Count     */    public function get_sub_agencies_count($sWhere, $agencyId = null) {        if ($agencyId == null) {            exit("AGENCY ID NULL || ERROR ");        }        $table = 'crm_agencies_basic as basic';        $options = array(            'fields' => array(                'count(*) as total'            ),            'conditions' =>            "basic.is_delete = 'N' AND is_payment = 'Y' AND basic.parent_id = $agencyId AND basic.is_approved != 'N'",);        if (strlen($sWhere) > 0) {            $options['conditions'] = $options['conditions'] . " and " . $sWhere;        }        $user_count = get_relation($table, $options, FALSE);        return $user_count[0]['total'];    }    /**     * Data Grid GET METHOD     */    public function get_agent_agencies($sLimit, $sWhere = "", $sOrder, $agentID = null) {        if ($agentID == null) {            exit("AGENCY ID NULL || ERROR ");        }        $table = 'crm_agencies_basic as basic';        $options = array(            'fields' => array(                'basic.user_id,                 basic.agency_image,                 basic.agency_name,                 basic.agency_email,                 basic.created_date,                 basic.parent_id,                 basic.is_approved,                 master.user_id'            ),            'JOIN' => array(                array(                    'table' => 'crm_user_tbl master',                    'condition' => 'basic.user_id = master.user_id',                    'type' => 'FULL'                )            ),            'conditions' => "basic.is_delete = 'N' AND is_payment = 'Y' AND basic.parent_id = $agentID AND basic.is_approved != 'N'",            'LIMIT' => array(                "start" => $sLimit['start'],                "end" => $sLimit['end']            ),            'ORDER_BY' => array(                "field" => $sOrder['field'],                "order" => $sOrder['order']            )        );        if (strlen($sWhere) > 0) {            $options['conditions'] = $options['conditions'] . " and " . $sWhere;        }        $agencyArr = get_relation($table, $options, FALSE);        return $agencyArr;    }    /*     * Agencies Count for Agent User     */    public function get_agent_agencies_count($sWhere, $agentID = null) {        if ($agentID == null) {            exit("AGENCY ID NULL || ERROR ");        }        $table = 'crm_agencies_basic as basic';        $options = array(            'fields' => array(                'count(*) as total'            ),            'conditions' => "basic.is_delete = 'N' AND is_payment = 'Y' AND basic.parent_id = $agentID AND basic.is_approved != 'N'");        if (strlen($sWhere) > 0) {            $options['conditions'] = $options['conditions'] . " and " . $sWhere;        }        $user_count = get_relation($table, $options, FALSE);        return $user_count[0]['total'];    }    public function get_agency_details($userID = null) {        if ($userID == null) {            exit("AGENCY ID NULL || ERROR ");        }        $table = 'crm_agencies_basic as basic';        $options = array(            'JOIN' => array(                array(                    'table' => 'crm_user_tbl master',                    'condition' => 'basic.user_id = master.user_id',                    'type' => 'FULL'                ),                array(                    'table' => 'crm_agencies_bank_details bank',                    'condition' => 'basic.user_id = bank.agency_id',                    'type' => 'LEFT'                ),                array(                    'table' => 'crm_agencies_documents doc',                    'condition' => 'basic.user_id = doc.agency_id',                    'type' => 'LEFT'                )            ),            'conditions' => array(                "basic.is_delete" => 'N',                "basic.is_payment" => 'Y',                "basic.user_id" => $userID,            ),        );        $agencyArr = get_relation($table, $options, FALSE);        return $agencyArr[0];    }    public function get_sub_agency_log($agencyID = null, $admin = "N") {        if ($agencyID == null) {            exit("AGENCY ID NULL || ERROR ");        }        $table = 'crm_agency_log as log';        if ($admin = "Y") {            $options = array(                'conditions' => array(                    "log.agency_id" => $agencyID,                ),            );        } else {            $options = array(                'conditions' => array(                    "log.agency_id" => $agencyID,                    "log.action_by" => $this->session->userdata['user_info']['user_id'],                ),            );        }        $agencylog = get_relation($table, $options, FALSE);        return $agencylog;    }    /**     *     * @param type $sLimit database table limit     * @param type $sWhere     * @param type $sOrder     * @return Array of all un-approved agencies     */    public function get_unpproved_agencies($sLimit, $sWhere = "", $sOrder) {        $table = 'crm_agencies_basic as basic';        $options = array(            'fields' => array(                'basic.user_id,                 basic.agency_image,                 basic.agency_name,                 basic.agency_email,                 basic.created_date,                 basic.parent_id,                 master.user_id,                 master_1.display_name,                 basic.agency_city'            ),            'JOIN' => array(                array(                    'table' => 'crm_user_tbl master',                    'condition' => 'basic.user_id = master.user_id',                    'type' => 'FULL'                ),                array(                    'table' => 'crm_user_tbl master_1',                    'condition' => 'basic.parent_id = master_1.user_id',                    'type' => 'LEFT'                )            ),            'conditions' => array(                "basic.is_delete" => 'N',                "basic.is_payment" => 'Y',                "basic.is_approved" => 'NA',            ),            'LIMIT' => array(                "start" => $sLimit['start'],                "end" => $sLimit['end']            ),            'ORDER_BY' => array(                "field" => $sOrder['field'],                "order" => $sOrder['order']            )        );        if (strlen($sWhere) > 0) {            $options['conditions']['or'] = $sWhere;        }        $agencyArr = get_relation($table, $options, FALSE);        return $agencyArr;    }    /**     * @uses Count of UNAPPROVED AGENCY     * @param type $sWhere SQL where condition.     * @return type Total Count     */    public function get_count_agenices($sWhere) {        $table = 'crm_agencies_basic as basic';        $options = array(            'fields' => array(                'count(*) as total'            ),            'conditions' => array(                "basic.is_delete" => 'N',                "basic.is_payment" => 'Y',                "basic.is_approved" => 'NA'            ),        );        if (strlen($sWhere) > 0) {            $options['conditions']['or'] = $sWhere;        }        $user_count = get_relation($table, $options, FALSE);        return $user_count[0]['total'];    }    /**     *     * @param type $sLimit database table limit     * @param type $sWhere     * @param type $sOrder     * @return Array of all approved agencies     */    public function get_approved_agencies($sLimit, $sWhere = "", $sOrder) {        $table = 'crm_agencies_basic as basic';        $options = array(            'fields' => array(                'basic.user_id,                 basic.agency_image,                 basic.agency_name,                 basic.agency_email,                 basic.created_date,                 basic.parent_id,                 master.user_id,                 master_1.display_name,                 basic.agency_city'            ),            'JOIN' => array(                array(                    'table' => 'crm_user_tbl master',                    'condition' => 'basic.user_id = master.user_id',                    'type' => 'FULL'                ),                array(                    'table' => 'crm_user_tbl master_1',                    'condition' => 'basic.parent_id = master_1.user_id',                    'type' => 'LEFT'                )            ),            'conditions' => array(                "basic.is_delete" => 'N',                "basic.is_payment" => 'Y',                "basic.is_approved" => 'Y',            ),            'LIMIT' => array(                "start" => $sLimit['start'],                "end" => $sLimit['end']            ),            'ORDER_BY' => array(                "field" => $sOrder['field'],                "order" => $sOrder['order']            )        );        if (strlen($sWhere) > 0) {            $options['conditions']['or'] = $sWhere;        }        $agencyArr = get_relation($table, $options, FALSE);        return $agencyArr;    }    /**     * @uses Count of UNAPPROVED AGENCY     * @param type $sWhere SQL where condition.     * @return type Total Count     */    public function get_count_approved_agenices($sWhere) {        $table = 'crm_agencies_basic as basic';        $options = array(            'fields' => array(                'count(*) as total'            ),            'conditions' => array(                "basic.is_delete" => 'N',                "basic.is_payment" => 'Y',                "basic.is_approved" => 'Y'            ),        );        if (strlen($sWhere) > 0) {            $options['conditions']['or'] = $sWhere;        }        $user_count = get_relation($table, $options, FALSE);        return $user_count[0]['total'];    }    /**     * @uses GET Agency Profile By ID     * @param type $user_id -> User MASTER TBL ID     * @return type ARRAY of Details     */    public function get_agency_profile($user_id) {        $table = 'crm_user_tbl';        $options = array(            'JOIN' => array(                array(                    'table' => 'crm_agencies_basic',                    'condition' => 'crm_agencies_basic.user_id = crm_user_tbl.user_id',                    'type' => 'FULL'                ),                array(                    'table' => 'crm_agencies_bank_details',                    'condition' => 'crm_agencies_bank_details.agency_id = crm_user_tbl.user_id',                    'type' => 'LEFT'                ),                array(                    'table' => 'crm_agencies_documents',                    'condition' => 'crm_agencies_documents.agency_id = crm_user_tbl.user_id',                    'type' => 'LEFT'                )            ),            'conditions' => array(                "crm_user_tbl.user_id" => $user_id            )        );        $agency_arr = get_relation($table, $options);        return $agency_arr;    }    /**     * @uses Get Active Agencies     * @return Array     */    public function get_agencies() {        $table = 'crm_user_tbl as master';        $options = array(            'fields' => array("master.user_id as id, master.email,master.display_name"),            'JOIN' => array(                array(                    'table' => 'crm_agencies_basic basic',                    'condition' => 'basic.user_id = master.user_id',                    'type' => 'FULL'                )            ),            'conditions' => array(                "master.is_deleted" => 'N',                "master.is_approved" => 'Y',                "basic.is_delete" => 'N',                "basic.is_approved" => 'Y',                "basic.is_payment" => "Y"            ),            'ORDER BY' => array(                'ASC'            )        );        $agentMember = get_relation($table, $options, FALSE);        return $agentMember;    }}